pipeline {

    agent { label "jenkins-agent" }
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
        ansiColor('xtrem')
    }

    environment {
        KIND_HOME = tool name: 'kind', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        KUBECTL_HOME = tool name: 'kubectl', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        EKSCTL_HOME = tool name: 'eksctl', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        PATH = "${KIND_HOME}:${KUBECTL_HOME}:${EKSCTL_HOME}:${env.PATH}"
        AWS_ACCESS_KEY_ID = credentials('accessKey')
        AWS_SECRET_ACCESS_KEY = credentials('secretKey')
        PROJECT_FOLDER_PATH = 'infrastructure/Kubernetes'
        KUBECONFIG = '/home/jenkins/.kube/config'
    }

    stages {

        stage('Create EKS cluster') {
            steps {
                dir(PROJECT_FOLDER_PATH) {
                    sh "eksctl create cluster -f cluster.yaml"
                }
                
            }
        }
        
        stage('Test') {
            steps {
                script {
                    dir(PROJECT_FOLDER_PATH) {
                        sh """
                        aws --version
                        aws eks update-kubeconfig --name basic-cluster
                        cat /home/jenkins/.kube/config
                        export KUBECONFIG=${KUBECONFIG}
                        kubectl get nodes
                        """
                    }
                }
            }
        }
        
        stage('Deploy') {
            steps {
                script {
                    dir(PROJECT_FOLDER_PATH) {
                        sh """
                        kubectl apply -f deployment.yaml
                        kubectl apply -f lb-service.yaml
                        kubectl get svc
                        """
                    }
                }
            }
        }
    }
}