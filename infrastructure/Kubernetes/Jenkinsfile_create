pipeline {

    agent { label "jenkins-agent" }
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        disableConcurrentBuilds()
        timestamps()
        ansiColor('xtrem')
    }

    environment {
        KIND_HOME = tool name: 'kind', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        KUBECTL_HOME = tool name: 'kubectl', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        EKSCTL_HOME = tool name: 'eksctl', type: 'com.cloudbees.jenkins.plugins.customtools.CustomTool'
        PATH = "${KIND_HOME}:${KUBECTL_HOME}:${EKSCTL_HOME}:${env.PATH}"
        AWS_ACCESS_KEY_ID = credentials('accessKey')
        AWS_SECRET_ACCESS_KEY = credentials('secretKey')
        PROJECT_FOLDER_PATH = 'infrastructure/Kubernetes'
        KUBECONFIG = '/home/jenkins/.kube/config'
    }

    stages {

        stage('Create EKS cluster') {
            steps {
                dir(PROJECT_FOLDER_PATH) {
                    sh "eksctl create cluster -f 0-cluster.yaml"
                }
                
            }
        }
        
        stage('Test') {
            steps {
                script {
                    dir(PROJECT_FOLDER_PATH) {
                        sh """
                        aws --version
                        aws eks update-kubeconfig --name demo-cluster
                        cat /home/jenkins/.kube/config
                        export KUBECONFIG=${KUBECONFIG}
                        helm version
                        kubectl get nodes
                        """
                    }
                }
            }
        }

        stage('Deploy app') {
            steps {
                dir(PROJECT_FOLDER_PATH) {
                    sh """
                    kubectl apply -f 1-deployment.yaml
                    kubectl apply -f 2-service.yaml
                    """
                }
            }
        }
        
        stage('Deploy prometheus-grafana') {
            steps {
                script {
                    dir(PROJECT_FOLDER_PATH) {
                        sh '''
                        kubectl apply -f prometheus-grafana/0-namespace.yaml

                        helm repo add stable https://charts.helm.sh/stable
                        helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
                        helm install stable prometheus-community/kube-prometheus-stack -n prometheus
                        
                        kubectl patch svc stable-kube-prometheus-sta-prometheus --patch "$(cat prometheus-grafana/1-patch.yaml)" -n prometheus
                        kubectl patch svc stable-grafana --patch "$(cat prometheus-grafana/1-patch.yaml)" -n prometheus
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            emailext to: "${EMAIL}",
            subject: "Jenkins",
            body: "Infrastructure deployed",
            attachLog: true
        }
    }    

}